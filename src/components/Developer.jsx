/*
 Auto-generated by: https://github.com/pmndrs/gltfjsx
 */

import {useEffect, useRef} from 'react'
import {useAnimations, useFBX, useGLTF} from '@react-three/drei'

const Developer = ({ animationName = "idle", ...props}) => {
        const group = useRef();
        const { animations: idleAnimation } = useFBX('/models/animations/Offensive Idle.fbx');
        const { animations: KUAnimation } = useFBX('/models/animations/Kip Up.fbx');
        const { animations: victoryAnimation } = useFBX('/models/animations/victory.fbx');
        const { animations: BDAnimation } = useFBX('/models/animations/Breakdance Ending 1.fbx');
        const cleanAnimationTrackNames = (animations, prefixToRemove) => {
                animations.forEach((animation) => {
                        animation.tracks.forEach((track) => {
                                if (track.name.startsWith(prefixToRemove)) {
                                        track.name = track.name.replace(prefixToRemove, '');
                                }
                        });
                });
        };
        idleAnimation[0].name = "idle";
        KUAnimation[0].name = "KU";
        victoryAnimation[0].name = "victory";
        BDAnimation[0].name = "BD";
        cleanAnimationTrackNames(idleAnimation, "mixamorig");
        cleanAnimationTrackNames(KUAnimation, "mixamorig");
        cleanAnimationTrackNames(victoryAnimation, "mixamorig");
        cleanAnimationTrackNames(BDAnimation, "mixamorig");
        const { actions } = useAnimations([idleAnimation[0], KUAnimation[0], victoryAnimation[0], BDAnimation[0]], group);
        useEffect(() => {
                actions[animationName].fadeIn(0.5).play();
                console.log('actions', actions[animationName]);
                return () => actions[animationName].fadeOut(0.5);
        }, [animationName]);
    const { nodes, materials } = useGLTF('/models/human/developer.glb');
    return (
        <group {...props} dispose={null} ref={group}>
            <primitive object={nodes.Hips} />
            <skinnedMesh
                name="EyeLeft"
                geometry={nodes.EyeLeft.geometry}
                material={materials.Wolf3D_Eye}
                skeleton={nodes.EyeLeft.skeleton}
                morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
                morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
            />
            <skinnedMesh
                name="EyeRight"
                geometry={nodes.EyeRight.geometry}
                material={materials.Wolf3D_Eye}
                skeleton={nodes.EyeRight.skeleton}
                morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
                morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
            />
            <skinnedMesh
                name="Wolf3D_Head"
                geometry={nodes.Wolf3D_Head.geometry}
                material={materials.Wolf3D_Skin}
                skeleton={nodes.Wolf3D_Head.skeleton}
                morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
                morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
            />
            <skinnedMesh
                name="Wolf3D_Teeth"
                geometry={nodes.Wolf3D_Teeth.geometry}
                material={materials.Wolf3D_Teeth}
                skeleton={nodes.Wolf3D_Teeth.skeleton}
                morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
                morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
            />
            <skinnedMesh
                geometry={nodes.Wolf3D_Hair.geometry}
                material={materials.Wolf3D_Hair}
                skeleton={nodes.Wolf3D_Hair.skeleton}
            />
            <skinnedMesh
                geometry={nodes.Wolf3D_Glasses.geometry}
                material={materials.Wolf3D_Glasses}
                skeleton={nodes.Wolf3D_Glasses.skeleton}
            />
            <skinnedMesh
                geometry={nodes.Wolf3D_Body.geometry}
                material={materials.Wolf3D_Body}
                skeleton={nodes.Wolf3D_Body.skeleton}
            />
            <skinnedMesh
                geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
                material={materials.Wolf3D_Outfit_Bottom}
                skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
            />
            <skinnedMesh
                geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
                material={materials.Wolf3D_Outfit_Footwear}
                skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
            />
            <skinnedMesh
                geometry={nodes.Wolf3D_Outfit_Top.geometry}
                material={materials.Wolf3D_Outfit_Top}
                skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
            />
        </group>
    )
}

useGLTF.preload('/models/humans/developer.glb')
export default Developer
